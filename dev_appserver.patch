diff --git a/appengine/tools/api_server.py b/appengine/tools/api_server.py
index e7ede28..175dd07 100644
--- a/appengine/tools/api_server.py
+++ b/appengine/tools/api_server.py
@@ -67,6 +67,7 @@ from google.appengine.api.xmpp import xmpp_service_stub
 from google.appengine.api import datastore_file_stub
 from google.appengine.datastore import datastore_sqlite_stub
 from google.appengine.datastore import datastore_stub_util
+from google.appengine.datastore import datastore_mongodb_stub
 
 from google.appengine.api import apiproxy_stub_map
 from google.appengine.ext.remote_api import remote_api_pb
@@ -236,6 +237,7 @@ def _SetupStubs(
     trusted,
     blobstore_path,
     use_sqlite,
+    use_mongodb,
     auto_id_policy,
     high_replication,
     datastore_path,
@@ -265,6 +267,7 @@ def _SetupStubs(
         storage.
     use_sqlite: A bool indicating whether DatastoreSqliteStub or
         DatastoreFileStub should be used.
+    use_mongodb: A bool indication whether DatastoreMongoDBStub should be used.
     auto_id_policy: One of datastore_stub_util.SEQUENTIAL or .SCATTERED,
         indicating whether the Datastore stub should assign IDs sequentially
         or scattered.
@@ -346,6 +349,14 @@ def _SetupStubs(
         trusted,
         root_path=application_root,
         auto_id_policy=auto_id_policy)
+  elif use_mongodb:
+    daatstore = datastore_mongodb_stub.DatastoreMongoDBStub(
+        app_id,
+        require_indexes=datastore_require_indexes,
+        root_path=application_root,
+        service_name='datastore_v3',
+        mongodb_host='localhost',
+        mongodb_port=27017)
   else:
     datastore = datastore_file_stub.DatastoreFileStub(
         app_id,
@@ -491,6 +502,10 @@ def ParseCommandArguments(args):
                       action=boolean_action.BooleanAction,
                       const=True,
                       default=False)
+  parser.add_argument('--use_mongodb',
+                      action=boolean_action.BooleanAction,
+                      const=True,
+                      default=False)
   parser.add_argument('--high_replication',
                       action=boolean_action.BooleanAction,
                       const=True,
@@ -579,7 +594,8 @@ class APIServerProcess(object):
                smtp_user=None,
                task_retry_seconds=None,
                trusted=None,
-               use_sqlite=None):
+               use_sqlite=None,
+               use_mongodb=None):
     """Configures the APIs hosted by this server.
 
     Args:
@@ -638,6 +654,7 @@ class APIServerProcess(object):
       trusted: A bool indicating if privileged APIs should be made available.
       use_sqlite: A bool indicating whether DatastoreSqliteStub or
           DatastoreFileStub should be used.
+      use_mongodb: A bool indication whether DatastoreMongoDBStub should be used.
     """
     self._process = None
     self._host = host
@@ -671,6 +688,8 @@ class APIServerProcess(object):
     self._BindArgument('--task_retry_seconds', task_retry_seconds)
     self._BindArgument('--trusted', trusted)
     self._BindArgument('--use_sqlite', use_sqlite)
+    self._BindArgument('--use_mongodb', use_mongodb)
+
 
   @property
   def url(self):
@@ -843,6 +862,7 @@ def main():
               blobstore_path=args.blobstore_path,
               datastore_path=args.datastore_path,
               use_sqlite=args.use_sqlite,
+              use_mongodb=args.use_mongodb,
               auto_id_policy=args.auto_id_policy,
               high_replication=args.high_replication,
               datastore_require_indexes=args.require_indexes,
diff --git a/appengine/tools/dev_appserver.py b/appengine/tools/dev_appserver.py
index 763ce99..81c8e0f 100644
--- a/appengine/tools/dev_appserver.py
+++ b/appengine/tools/dev_appserver.py
@@ -130,6 +130,7 @@ from google.appengine.api import rdbms_mysqldb
 from google.appengine.api.system import system_stub
 from google.appengine.api.xmpp import xmpp_service_stub
 from google.appengine.datastore import datastore_sqlite_stub
+from google.appengine.datastore import datastore_mongodb_stub
 from google.appengine.datastore import datastore_stub_util
 
 from google.appengine import dist
@@ -3449,6 +3450,7 @@ def SetupStubs(app_id, **config):
     prospective_search_path: Path to the file to store Prospective Search stub
         data in.
     use_sqlite: Use the SQLite stub for the datastore.
+    use_mongodb: Use the MongoDB stub for the datastore.
     auto_id_policy: How datastore stub assigns IDs, sequential or scattered.
     high_replication: Use the high replication consistency model
     history_path: DEPRECATED, No-op.
@@ -3491,6 +3493,7 @@ def SetupStubs(app_id, **config):
   prospective_search_path = config.get('prospective_search_path', '')
   clear_prospective_search = config.get('clear_prospective_search', False)
   use_sqlite = config.get('use_sqlite', False)
+  use_mongodb = config.get('use_mongodb', False)
   auto_id_policy = config.get('auto_id_policy', datastore_stub_util.SEQUENTIAL)
   high_replication = config.get('high_replication', False)
   require_indexes = config.get('require_indexes', False)
@@ -3575,6 +3578,11 @@ def SetupStubs(app_id, **config):
           trusted=trusted, root_path=root_path,
           use_atexit=_use_atexit_for_datastore_stub,
           auto_id_policy=auto_id_policy)
+    elif use_mongodb:
+      datastore = datastore_mongodb_stub.DatastoreMongoDBStub(
+          app_id, require_indexes=require_indexes,
+          service_name='datastore_v3', root_path=root_path,
+          mongodb_host='localhost', mongodb_port=27017)
     else:
       logging.warning(FILE_STUB_DEPRECATION_MESSAGE)
       datastore = datastore_file_stub.DatastoreFileStub(
diff --git a/appengine/tools/dev_appserver_main.py b/appengine/tools/dev_appserver_main.py
index 7f6667c..c14d57b 100644
--- a/appengine/tools/dev_appserver_main.py
+++ b/appengine/tools/dev_appserver_main.py
@@ -115,6 +115,8 @@ Options:
                              (Default '%(task_retry_seconds)s')
   --use_sqlite               Use the new, SQLite based datastore stub.
                              (Default false)
+  --use_mongodb              Use MongoDB based datastore stub. Mongodb should be
+                             running on localhost, on default port 27017.
   --port_sqlite_data         Converts the data from the file based datastore
                              stub to the new SQLite stub, one time use only.
                              (Default false)
@@ -232,6 +234,7 @@ ARG_TASK_RETRY_SECONDS = 'task_retry_seconds'
 
 ARG_TRUSTED = 'trusted'
 ARG_USE_SQLITE = 'use_sqlite'
+ARG_USE_MONGODB = 'use_mongodb'
 ARG_PORT_SQLITE_DATA = 'port_sqlite_data'
 ARG_CONSOLE = 'console'
 
@@ -348,6 +351,7 @@ LONG_OPTIONS = [
     'task_retry_seconds=',
     'trusted',
     'use_sqlite',
+    'use_mongodb',
     'port_sqlite_data',
     'enable_console',
     'disable_console',
@@ -431,6 +435,9 @@ def ParseArguments(argv):
     if option == '--auto_id_policy':
       option_dict[ARG_AUTO_ID_POLICY] = value.lower()
 
+    if option == '--use_mongodb':
+      option_dict[ARG_USE_MONGODB] = True
+
     if option == '--use_sqlite':
       option_dict[ARG_USE_SQLITE] = True
 
diff --git a/appengine/tools/devappserver2/api_server.py b/appengine/tools/devappserver2/api_server.py
index 3480b36..7e5c5e8 100644
--- a/appengine/tools/devappserver2/api_server.py
+++ b/appengine/tools/devappserver2/api_server.py
@@ -58,6 +58,7 @@ from google.appengine.api.system import system_stub
 from google.appengine.api.xmpp import xmpp_service_stub
 from google.appengine.datastore import datastore_sqlite_stub
 from google.appengine.datastore import datastore_stub_util
+from google.appengine.datastore import datastore_mongodb_stub
 
 from google.appengine.api import apiproxy_stub_map
 from google.appengine.api import datastore
@@ -304,13 +305,10 @@ def setup_stubs(
       'channel',
       channel_service_stub.ChannelServiceStub(request_data=request_data))
 
-  datastore_stub = datastore_sqlite_stub.DatastoreSqliteStub(
+  datastore_stub = datastore_mongodb_stub.DatastoreMongoDBStub(
       app_id,
-      datastore_path,
-      datastore_require_indexes,
-      trusted,
-      root_path=application_root,
-      auto_id_policy=datastore_auto_id_policy)
+      require_indexes=datastore_require_indexes,
+      root_path=application_root)
 
   datastore_stub.SetConsistencyPolicy(datastore_consistency)
 
